@page "/productos"
@rendermode InteractiveServer
@using System.ComponentModel.DataAnnotations

<h3>Inventario de Productos</h3>

<EditForm Model="productoActual" FormName="formProductos" OnValidSubmit="GuardarProducto">
    <DataAnnotationsValidator />
    @if (mostrarAlerta)
    {
        <div class="alert alert-danger" role="alert">
            El número del producto en el inventario ya se existe. Utiliza otro.
        </div>
    }

    <div class="form-group mb-4">
        <label for="nombre">Nombre del Producto</label>
        <div>
            <InputText class="form-control" id="nombre" @bind-Value="productoActual.Nombre" />
            <ValidationMessage For="@(()=>productoActual.Nombre)" />
        </div>
    </div>

    <div class="form-group mb-4">
        <label for="inventario">Número de Inventario</label>
        <div>
            <InputNumber class="form-control" id="inventario" @bind-Value="productoActual.Id" />
            <ValidationMessage For="@(()=>productoActual.Id)" />
        </div>
    </div>

    <div class="form-group mb-4">
        <label>Departamentos:</label>
        <div>
            <InputRadioGroup class="form-control" id="frutas" @bind-Value="productoActual.Departamentos">
                <InputRadio class="form-check-input"
                            id="frutas"
                            Value="@("Frutas")" />
                <label for="rdbFrutas"
                       class="form-check-inline">Frutas</label>
            </InputRadioGroup>
            <InputRadioGroup class="form-control" id="verd" @bind-Value="productoActual.Departamentos">
                <InputRadio class="form-check-input"
                            id="rdbVerd"
                            Value="@("Verduras")" />
                <label for="rdbFrutas"
                       class="form-check-inline">Verduras</label>
            </InputRadioGroup>
            <InputRadioGroup class="form-control" id="lacteos" @bind-Value="productoActual.Departamentos">
                <InputRadio class="form-check-input"
                            id="rdbLacteos"
                            Value="@("Lácteos")" />
                <label for="rdbFrutas"
                       class="form-check-inline">Lácteos</label>
            </InputRadioGroup>
            <ValidationMessage For="@(()=>productoActual.Departamentos)" />
        </div>
    </div>
    @if (editar)
    {
        <button type="submit" class="btn btn-primary mb-3">Actualizar</button>
        <button type="button" class="btn btn-secondary mb-3" @onclick="CancelarEdicion">Cancelar</button>
    }
    else
    {
        <button type="submit" class="btn btn-primary mb-3">Guardar</button>
    }
</EditForm>
@if (mostrarExistencias)
{
    <button type="button" class="btn btn-secondary mb-3" @onclick="() => mostrarExistencias = false">Productos en existencia</button>
}
else
{
    <button type="submit" class="btn btn-secondary mb-3" @onclick="() => mostrarExistencias = true">Ocultar productos en existencias</button>
}

@if (productos.Any())
{
    @if (mostrarExistencias)
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Número de Inventario</th>
                    <th>Nombre del Producto</th>
                    <th>Departamento</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in productos)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Nombre</td>
                        <td>@item.Departamentos</td>
                        <td>
                            <button class="btn  btn-sm" @onclick="() => EliminarProducto(item)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5M11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47M8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5" />
                                </svg>
                            </button>
                            <button class="btn btn-sm" @onclick="() => EditarProducto(item.Id)">
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                    <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                    <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                                </svg>
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Frutas</th>
                    <th>Verduras</th>
                    <th>Lácteos</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@productos.Count(p => p.Departamentos == "Frutas")</td>
                    <td>@productos.Count(p => p.Departamentos == "Verduras")</td>
                    <td>@productos.Count(p => p.Departamentos == "Lácteos")</td>
                </tr>
            </tbody>
        </table>
    }
}

@code {
    private List<Producto> productos = new List<Producto>();
    private Producto productoActual = new Producto();
    private bool mostrarAlerta = false;
    private bool editar = false;
    private bool mostrarExistencias = true;
    private int idEdicion;

    void GuardarProducto()
    {
        if (!editar)
        {
            if (productos.Any(p => p.Id == productoActual.Id))
            {
                mostrarAlerta = true;
            }
            else
            {
                productos.Add(productoActual);
                productoActual = new Producto();
                mostrarAlerta = false;
                editar = false;
            }
        }
        else
        {
            if (productos.Any(p => p.Id == productoActual.Id && p.Id != idEdicion))
            {
                mostrarAlerta = true;
            }
            else
            {
                Producto productoExistente = productos.Where(x => x.Id == idEdicion).First();
                productoExistente.Nombre = productoActual.Nombre;
                productoExistente.Departamentos = productoActual.Departamentos;
                productoExistente.Id = productoActual.Id;
                productoActual = new Producto();
                mostrarAlerta = false;
                editar = false;
            }
        }
    }

    void EliminarProducto(Producto producto)
    {
        productos.Remove(producto);
    }

    void EditarProducto(int id)
    {
        mostrarAlerta = false;
        editar = true;
        Producto productoAux = productos.Where(x => x.Id == id).First();
        productoActual.Id = productoAux.Id;
        productoActual.Nombre = productoAux.Nombre;
        productoActual.Departamentos = productoAux.Departamentos;
        idEdicion = id;
    }

    void CancelarEdicion()
    {
        productoActual = new Producto();
        mostrarAlerta = false;
        editar = false;
    }

}